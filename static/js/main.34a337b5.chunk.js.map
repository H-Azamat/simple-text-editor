{"version":3,"sources":["components/Leaf.jsx","components/CodeElement.jsx","components/DefaultElement.jsx","components/CustomEditor.js","components/TextEditor.jsx","img/bold.svg","img/italic.svg","img/code.svg","img/strikethrough.svg","img/underline.svg","App.jsx","index.js"],"names":["Leaf","props","console","log","leaf","attributes","style","fontWeight","bold","fontStyle","italic","textDecoration","underline","strikethrough","children","CodeElement","DefaultElement","CustomEditor","isBoldMarkActive","editor","Editor","nodes","match","n","universal","isItalicMarkActive","isUnderlineMarkActive","isStrikethroughMarkActive","isCodeBlockActive","type","toggleBoldMark","isActive","Transforms","setNodes","Text","isText","split","toggleCodeBlock","isBlock","toggleItalicMark","toggleUnderlineMark","toggleStrikethroughMark","TextEditor","existingValue","JSON","parse","localStorage","getItem","useMemo","withReact","createEditor","useState","text","value","setValue","renderElement","useCallback","element","renderLeaf","onChange","newValue","content","stringify","setItem","onKeyDown","e","ctrlKey","key","preventDefault","App","className","src","alt","title","strikeThrough","code","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34a337b5.chunk.js","sourcesContent":["export const Leaf = props => {\r\n  console.log(props.leaf)\r\n  \r\n    return (\r\n      <span\r\n        {...props.attributes}\r\n        style={{ fontWeight: props.leaf.bold ? 'bold' : 'normal', fontStyle: props.leaf.italic ? 'italic' : 'normal', textDecoration: props.leaf.underline ? 'underline' :  props.leaf.strikethrough ? 'line-through' : 'none', }}\r\n      >\r\n        {props.children}\r\n      </span>\r\n    )\r\n  }","export const CodeElement = props => {\r\n    return <pre {...props.attributes}>\r\n            <code>{props.children}</code>\r\n        </pre>\r\n}\r\n","export const DefaultElement = props => {\r\n    return <p  {...props.attributes}>{props.children}</p>\r\n}\r\n","import { Editor, Text, Transforms } from \"slate\"\r\n\r\nexport const CustomEditor = {\r\n    isBoldMarkActive(editor) {\r\n      const [match] = Editor.nodes(editor, {\r\n        match: n => n.bold === true,\r\n        universal: true,\r\n      })\r\n  \r\n      return !!match\r\n    },\r\n\r\n    isItalicMarkActive(editor) {\r\n      const [match] = Editor.nodes(editor, {\r\n        match: n => n.italic === true,\r\n        universal: true,\r\n      })\r\n  \r\n      return !!match\r\n    },\r\n\r\n    isUnderlineMarkActive(editor) {\r\n      const [match] = Editor.nodes(editor, {\r\n        match: n => n.underline === true,\r\n        universal: true,\r\n      })\r\n  \r\n      return !!match\r\n    },\r\n\r\n    isStrikethroughMarkActive(editor) {\r\n      const [match] = Editor.nodes(editor, {\r\n        match: n => n.strikethrough === true,\r\n        universal: true,\r\n      })\r\n  \r\n      return !!match\r\n    },\r\n  \r\n    isCodeBlockActive(editor) {\r\n      const [match] = Editor.nodes(editor, {\r\n        match: n => n.type === 'code',\r\n      })\r\n  \r\n      return !!match\r\n    },\r\n  \r\n    toggleBoldMark(editor) {\r\n      const isActive = CustomEditor.isBoldMarkActive(editor)\r\n      Transforms.setNodes(\r\n        editor,\r\n        { bold: isActive ? null : true },\r\n        { match: n => Text.isText(n), split: true }\r\n      )\r\n    },\r\n  \r\n    toggleCodeBlock(editor) {\r\n      const isActive = CustomEditor.isCodeBlockActive(editor)\r\n      Transforms.setNodes(\r\n        editor,\r\n        { type: isActive ? null : 'code' },\r\n        { match: n => Editor.isBlock(editor, n) }\r\n      )\r\n    },\r\n\r\n    toggleItalicMark(editor) {\r\n      const isActive = CustomEditor.isItalicMarkActive(editor)\r\n      Transforms.setNodes(\r\n        editor,\r\n        { italic: isActive ? null : true },\r\n        { match: n => Text.isText(n), split: true }\r\n      )\r\n    },\r\n\r\n    toggleUnderlineMark(editor) {\r\n      const isActive = CustomEditor.isUnderlineMarkActive(editor)\r\n      Transforms.setNodes(\r\n        editor,\r\n        { underline: isActive ? null : true },\r\n        { match: n => Text.isText(n), split: true }\r\n      )\r\n    },\r\n\r\n    toggleStrikethroughMark(editor) {\r\n      const isActive = CustomEditor.isStrikethroughMarkActive(editor)\r\n      Transforms.setNodes(\r\n        editor,\r\n        { strikethrough: isActive ? null : true },\r\n        { match: n => Text.isText(n), split: true }\r\n      )\r\n    },\r\n  }","import React, { useCallback, useMemo, useState } from 'react'\r\nimport { createEditor } from 'slate'\r\nimport { Slate, withReact, Editable } from 'slate-react'\r\nimport { Leaf } from './Leaf'\r\nimport { CodeElement } from './CodeElement'\r\nimport { DefaultElement } from './DefaultElement'\r\nimport { CustomEditor } from './CustomEditor'\r\n\r\nexport const TextEditor = () => {\r\n\r\n    const existingValue = JSON.parse(localStorage.getItem('content'))\r\n\r\n    const editor = useMemo(() => withReact(createEditor()), [])\r\n    const [value, setValue] = useState(existingValue || [\r\n        {\r\n            type: 'paragraph',\r\n            children: [{ text: \"Введите текст\" }]\r\n        }\r\n    ])\r\n\r\n    const renderElement = useCallback(props => {\r\n        switch (props.element.type) {\r\n            case 'code':\r\n                return <CodeElement {...props} />\r\n            default:\r\n                return <DefaultElement {...props} />\r\n        }\r\n    }, [])\r\n\r\n    const renderLeaf = useCallback(props => {\r\n        return <Leaf {...props} />\r\n      }, [])\r\n\r\n    const events = (e) => {\r\n        if(!e.ctrlKey){\r\n            return \r\n        }\r\n\r\n        switch (e.key) {\r\n\r\n            case '`': {\r\n                e.preventDefault()\r\n                CustomEditor.toggleCodeBlock(editor)\r\n                break\r\n            }\r\n\r\n            case 'b': {\r\n                e.preventDefault()\r\n                CustomEditor.toggleBoldMark(editor)\r\n                break\r\n            }\r\n\r\n            case 'i': {\r\n                e.preventDefault()\r\n                CustomEditor.toggleItalicMark(editor)\r\n                break\r\n            }\r\n\r\n            case 'u': {\r\n                e.preventDefault()\r\n                CustomEditor.toggleUnderlineMark(editor)\r\n                break\r\n            }\r\n\r\n            case 'k': {\r\n                e.preventDefault()\r\n                CustomEditor.toggleStrikethroughMark(editor)\r\n                break\r\n            }\r\n\r\n        }\r\n    } \r\n\r\n    return(\r\n        <Slate\r\n            editor={ editor }\r\n            value={ value }\r\n            onChange={ newValue => {\r\n                const content = JSON.stringify(newValue)\r\n                localStorage.setItem('content', content)\r\n                setValue(newValue)\r\n            }}\r\n        >\r\n            <Editable \r\n                renderElement={renderElement}\r\n                renderLeaf={renderLeaf}\r\n                onKeyDown={events}\r\n            />\r\n        </Slate>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/bold.d2bc3533.svg\";","export default __webpack_public_path__ + \"static/media/italic.4f288d37.svg\";","export default __webpack_public_path__ + \"static/media/code.60b542e5.svg\";","export default __webpack_public_path__ + \"static/media/strikethrough.ec1de9a8.svg\";","export default __webpack_public_path__ + \"static/media/underline.b204b55b.svg\";","import './App.css'\nimport { TextEditor } from './components'\nimport { bold, code, italic, strikeThrough, underline } from './img'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <div className=\"wrapper\">\n        <div className=\"styleText\">\n          <img src={bold} alt=\"bold\" title=\"Ctrl + B\" />\n          <img src={italic} alt=\"italic\" title=\"Ctrl + I\" />\n          <img src={underline} alt=\"underline\" title=\"Ctrl + U\" />\n          <img src={strikeThrough} alt=\"strikeThrough\" title=\"Ctrl + K\" />\n          <img src={code} alt=\"code\" title=\"Ctrl + `\" />\n        </div>\n\n        <div className=\"text\">\n          <TextEditor />\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}